name: Build and Deploy Angular SSR to VPS

on:
  push:
    branches: [ main, develop ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # -------------------- Checkout --------------------
    - name: Checkout code
      uses: actions/checkout@v3

    # -------------------- Setup Node --------------------
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'

    # -------------------- Install Dependencies --------------------
    - name: Install dependencies
      run: npm install

    # -------------------- Build Angular SSR --------------------
    - name: Build Angular app
      run: |
        if [ "${{ github.ref }}" == "refs/heads/main" ]; then
          npm run build -- --configuration=production --output-path=dist_nasb --delete-output-path
        else
          npm run build -- --configuration=development --output-path=dist_nasb --delete-output-path
        fi

    # -------------------- Check build output --------------------
    - name: Check build output
      run: ls -R dist_nasb

    # -------------------- Prepare deployment package --------------------
    - name: Prepare deployment package
      run: |
        # کپی فایل‌های ضروری برای اجرای سرور به پوشه dist_nasb
        cp package.json dist_nasb/
        cp package-lock.json dist_nasb/ 2>/dev/null || true
        
        # نمایش محتوای پکیج
        echo "Deployment package contents:"
        ls -la dist_nasb/

    # -------------------- Clean old folder on VPS --------------------
    - name: Clean target folder on VPS
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        password: ${{ secrets.VPS_PASS }}
        script: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            TARGET_DIR="/var/www/timedari.ir/ssr"
          else
            TARGET_DIR="/var/www/dev-timedari-frontend/ssr"
          fi
          
          # پاکسازی پوشه مقصد
          sudo rm -rf $TARGET_DIR/*
          sudo mkdir -p $TARGET_DIR

    # -------------------- Deploy files to VPS --------------------
    - name: Deploy files to VPS
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        password: ${{ secrets.VPS_PASS }}
        source: "dist_nasb/*"
        target: ${{ github.ref == 'refs/heads/main' && '/var/www/timedari.ir/ssr' || '/var/www/dev-timedari-frontend/ssr' }}
        strip_components: 0

    # -------------------- Install dependencies and restart on VPS --------------------
    - name: Install dependencies and restart SSR
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        password: ${{ secrets.VPS_PASS }}
        script: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            APP_DIR="/var/www/timedari.ir/ssr"
            APP_NAME="timedari-ssr"
          else
            APP_DIR="/var/www/dev-timedari-frontend/ssr"
            APP_NAME="dev-timedari-ssr"
          fi
          
          cd $APP_DIR
          
          # انتقال فایل‌ها از dist_nasb به مسیر اصلی
          echo "Moving files from dist_nasb to root directory..."
          mv dist_nasb/* .
          mv dist_nasb/.* 2>/dev/null || true
          rmdir dist_nasb 2>/dev/null || true
          
          # نصب dependencies
          echo "Installing dependencies..."
          npm install --production
          
          # تنظیم مجوزها
          echo "Setting permissions..."
          sudo chown -R www-data:www-data $APP_DIR
          sudo chmod -R 755 $APP_DIR
          
          # راه‌اندازی برنامه - روش ساده و ایمن
          echo "Starting application..."
          
          # فقط سرورهای مربوط به این مسیر خاص را متوقف کنیم
          SERVER_PIDS=$(ps aux | grep "node.*server/server.mjs" | grep -v grep | awk '{print $2}')
          if [ ! -z "$SERVER_PIDS" ]; then
            echo "Stopping existing server(s) with PIDs: $SERVER_PIDS"
            for pid in $SERVER_PIDS; do
              kill $pid 2>/dev/null || true
            done
            sleep 2
          fi
          
          # راه اندازی سرور
          nohup node server/server.mjs > /var/log/nodejs.log 2>&1 &
          SERVER_PID=$!
          echo "Server started with PID: $SERVER_PID"
          
          # صبر کردن تا سرور کامل بالا بیاید
          sleep 8
          
          # تست connection
          echo "Testing connection..."
          if curl -s --retry 3 --retry-delay 3 http://localhost:4000 > /dev/null; then
            echo "✅ Server is running successfully!"
            echo "Deployment completed successfully!"
          else
            echo "❌ Server failed to start. Check /var/log/nodejs.log for details."
            echo "Trying alternative method with PM2..."
            
            # استفاده از PM2 به عنوان fallback
            npm install -g pm2
            pm2 delete $APP_NAME 2>/dev/null || true
            pm2 start server/server.mjs --name $APP_NAME --cwd $APP_DIR --time
            pm2 save
            echo "Fallback to PM2 completed."
            echo "Deployment completed with fallback!"
          fi