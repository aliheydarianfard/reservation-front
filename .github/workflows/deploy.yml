name: Build and Deploy Angular SSR to VPS

on:
  push:
    branches: [ main, develop ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # -------------------- Checkout --------------------
    - name: Checkout code
      uses: actions/checkout@v3

    # -------------------- Setup Node --------------------
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'

    # -------------------- Install Dependencies --------------------
    - name: Install dependencies
      run: npm install

    # -------------------- Build Angular SSR --------------------
    - name: Build Angular SSR
      run: |
        OUTPUT_DIR=dist_ssr
        if [ "${{ github.ref }}" == "refs/heads/main" ]; then
          npm run build -- --configuration=production --output-path=$OUTPUT_DIR --delete-output-path --no-prerender
        else
          npm run build -- --configuration=development --output-path=$OUTPUT_DIR --delete-output-path --no-prerender
        fi

    # -------------------- Check build output --------------------
    - name: Check build output
      run: ls -R dist_ssr

    # -------------------- Clean old folder on VPS --------------------
    - name: Clean target folder on VPS
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        password: ${{ secrets.VPS_PASS }}
        script: |
          TARGET=$([ "${{ github.ref }}" == "refs/heads/main" ] && echo "/var/www/timedari.ir/ssr" || echo "/var/www/dev-timedari-frontend/ssr")
          sudo rm -rf $TARGET/*

    # -------------------- Deploy built files to VPS --------------------
    - name: Deploy built files to VPS
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        password: ${{ secrets.VPS_PASS }}
        source: dist_ssr/*
        target: $([ "${{ github.ref }}" == "refs/heads/main" ] && echo "/var/www/timedari.ir/ssr" || echo "/var/www/dev-timedari-frontend/ssr")

    # -------------------- Set permissions on VPS --------------------
    - name: Set permissions
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        password: ${{ secrets.VPS_PASS }}
        script: |
          TARGET=$([ "${{ github.ref }}" == "refs/heads/main" ] && echo "/var/www/timedari.ir/ssr" || echo "/var/www/dev-timedari-frontend/ssr")
          sudo chown -R www-data:www-data $TARGET
          sudo chmod -R 755 $TARGET

    # -------------------- Restart SSR with PM2 --------------------
    - name: Restart SSR with PM2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        password: ${{ secrets.VPS_PASS }}
        script: |
          APP_DIR=$([ "${{ github.ref }}" == "refs/heads/main" ] && echo "/var/www/timedari.ir/ssr" || echo "/var/www/dev-timedari-frontend/ssr")
          APP_NAME=$([ "${{ github.ref }}" == "refs/heads/main" ] && echo "timedari-ssr" || echo "dev-timedari-ssr")
          cd $APP_DIR
          # نصب dependencies در صورت نبود node_modules
          if [ ! -d "node_modules" ]; then
            npm install
          fi
          # راه‌اندازی یا ری‌استارت PM2
          if pm2 list | grep -q $APP_NAME; then
            pm2 restart $APP_NAME
          else
            pm2 start server/main.server.mjs --name $APP_NAME
          fi
          pm2 save
